openapi: 3.0.3
info:
  title: OnlyDust Backoffice API
  description: OnlyDust Backoffice API
  version: 1.0.0
servers:
  - url: 'http://localhost:9999'
    description: Local
  - url: 'https://develop-api.onlydust.com'
    description: Develop
  - url: 'https://staging-api.onlydust.com'
    description: Staging
  - url: 'https://api.onlydust.com'
    description: Production

paths:

  /bo/v1/sponsors:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Backoffice
      summary: Get sponsor page
      operationId: getSponsorPage
      description: |
        Get sponsor page
      parameters:
        - in: query
          name: pageIndex
          required: true
          schema:
            type: integer
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
        - in: query
          name: projectIds
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: simple
        - in: query
          name: sponsorIds
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: simple
      responses:
        "200":
          description: 'Sponsor page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SponsorPage'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /bo/v1/repositories:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Backoffice
      summary: Get github repository page
      operationId: getGithubRepositoryPage
      description: |
        Get github repository page
      parameters:
        - in: query
          name: pageIndex
          required: true
          schema:
            type: integer
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
        - in: query
          name: projectIds
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: simple
      responses:
        "200":
          description: 'Github repository page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GithubRepositoryPage'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /bo/v1/budgets:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Backoffice
      summary: Get budget page
      operationId: getBudgetPage
      description: |
        Get budget page
      parameters:
        - in: query
          name: pageIndex
          required: true
          schema:
            type: integer
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
        - in: query
          name: projectIds
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: simple
      responses:
        "200":
          description: 'Budget page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetPage'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /bo/v1/project-lead-invitations:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Backoffice
      summary: Get project lead invitations page
      operationId: getProjectLeadInvitationPage
      description: |
        Get project lead invitations page
      parameters:
        - in: query
          name: pageIndex
          required: true
          schema:
            type: integer
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
        - in: query
          name: ids
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: simple
        - in: query
          name: projectIds
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: simple
      responses:
        "200":
          description: 'Project Lead Invitation page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLeadInvitationPage'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'


  /bo/v1/users:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Backoffice
      summary: Get user page
      operationId: getUserPage
      description: |
        Get user page
      parameters:
        - in: query
          name: pageIndex
          required: true
          schema:
            type: integer
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
        - in: query
          name: userIds
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        "200":
          description: 'User page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPage'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /bo/v1/payments:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Backoffice
      summary: Get payment page
      operationId: getPaymentPage
      description: |
        Get payment page
      parameters:
        - in: query
          name: pageIndex
          required: true
          schema:
            type: integer
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
        - in: query
          name: projectIds
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: simple
        - in: query
          name: paymentIds
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: simple
      responses:
        "200":
          description: 'Payment page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPage'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'

  /bo/v1/projects:
    get:
      security:
        - apiKey: [ ]
      tags:
        - Backoffice
      summary: Get project page
      operationId: getProjectPage
      description: |
        Get project page
      parameters:
        - in: query
          name: pageIndex
          required: true
          schema:
            type: integer
        - in: query
          name: pageSize
          required: true
          schema:
            type: integer
        - in: query
          name: projectIds
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: simple
      responses:
        "200":
          description: 'Project page'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectPage'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "500":
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: Api-Key
  responses:
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          example:
            message: Github API is not responding
            status: 500
            id: 4f7c660e-6cf1-4424-b240-e630c4c19069
          schema:
            $ref: '#/components/schemas/OnlyDustError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          example:
            message: You must be authenticated to make this call
            status: 401
            id: 4f7c660e-6cf1-4424-b240-e630c4c19069
          schema:
            $ref: '#/components/schemas/OnlyDustError'

  schemas:
    # ERRORS ==================================================================
    OnlyDustError:
      type: object
      description: Error contract strongly inspired by JSON problem (rfc7807) specification
      required:
        - message
        - status
        - id
      properties:
        message:
          type: string
          description: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem.
          example: Not enough credit.
        status:
          type: integer
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 400
        id:
          type: string
          format: uuid
          description: The error id
          example: 4f7c660e-6cf1-4424-b240-e630c4c19069
    GithubRepositoryPage:
      type: object
      required:
        - contributors
        - totalPageNumber
        - totalItemNumber
        - nextPageIndex
        - hasMore
      properties:
        totalPageNumber:
          type: integer
        totalItemNumber:
          type: integer
        hasMore:
          type: boolean
        nextPageIndex:
          description: if there is no next page, it will be equals to the last page
          type: integer
        githubRepositories:
          type: array
          items:
            $ref: '#/components/schemas/GithubRepositoryResponse'

    SponsorPage:
      type: object
      required:
        - sponsors
        - totalPageNumber
        - totalItemNumber
        - nextPageIndex
        - hasMore
      properties:
        totalPageNumber:
          type: integer
        totalItemNumber:
          type: integer
        hasMore:
          type: boolean
        nextPageIndex:
          description: if there is no next page, it will be equals to the last page
          type: integer
        sponsors:
          type: array
          items:
            $ref: '#/components/schemas/SponsorPageItemResponse'

    SponsorPageItemResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        url:
          type: string
        logoUrl:
          type: string
        projectIds:
          type: array
          items:
            type: string
            format: uuid

    Technologies:
      type: object
      description: List fo technologies ordered by mastering level (the higher the better) or usage (ie. line count of a language)
      additionalProperties:
        type: integer
        format: int64
      example:
        Rust: 91283
        Go: 12388
        Java: 1233
    GithubRepositoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        owner:
          type: string
        name:
          type: string
        technologies:
          $ref: '#/components/schemas/Technologies'
        projectId:
          type: string
          format: uuid

    BudgetPage:
      type: object
      required:
        - contributors
        - totalPageNumber
        - totalItemNumber
        - nextPageIndex
        - hasMore
      properties:
        totalPageNumber:
          type: integer
        totalItemNumber:
          type: integer
        hasMore:
          type: boolean
        nextPageIndex:
          description: if there is no next page, it will be equals to the last page
          type: integer
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/BudgetResponse'
    BudgetResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        currency:
          $ref: '#/components/schemas/Currency'
        initialAmount:
          type: number
        remainingAmount:
          type: number
        spentAmount:
          type: number
        remainingAmountDollarsEquivalent:
          type: number
        initialAmountDollarsEquivalent:
          type: number
        spentAmountDollarsEquivalent:
          type: number
        projectId:
          type: string
          format: uuid

    ProjectLeadInvitationPage:
      type: object
      required:
        - contributors
        - totalPageNumber
        - totalItemNumber
        - nextPageIndex
        - hasMore
      properties:
        totalPageNumber:
          type: integer
        totalItemNumber:
          type: integer
        hasMore:
          type: boolean
        nextPageIndex:
          description: if there is no next page, it will be equals to the last page
          type: integer
        project_lead_invitations:
          type: array
          items:
            $ref: '#/components/schemas/ProjectLeadInvitationResponse'
    ProjectLeadInvitationResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        githubUserId:
          type: integer
          format: int64


    UserPage:
      type: object
      required:
        - users
        - totalPageNumber
        - totalItemNumber
        - nextPageIndex
        - hasMore
      properties:
        totalPageNumber:
          type: integer
        totalItemNumber:
          type: integer
        hasMore:
          type: boolean
        nextPageIndex:
          description: if there is no next page, it will be equals to the last page
          type: integer
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserPageItemResponse'
    UserPageItemResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        isCompany:
          type: boolean
        companyName:
          type: string
        companyNum:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        address:
          type: string
        postCode:
          type: string
        city:
          type: string
        country:
          type: string
        telegram:
          type: string
        twitter:
          type: string
        discord:
          type: string
        linkedin:
          type: string
        whatsapp:
          type: string
        bic:
          type: string
        iban:
          type: string
        ens:
          type: string
        ethAddress:
          type: string
        aptosAddress:
          type: string
        optimismAddress:
          type: string
        starknetAddress:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        lastSeenAt:
          type: string
          format: date-time
        email:
          type: string
        githubUserId:
          type: integer
          format: int64
        githubLogin:
          type: string
        githubHtmlUrl:
          type: string
        githubAvatarUrl:
          type: string
        bio:
          type: string
        location:
          type: string
        website:
          type: string
        lookingForAJob:
          type: boolean
        weeklyAllocatedTime:
          type: string
        languages:
          type: array
          items:
            type: string
        tcAcceptedAt:
          type: string
        onboardingCompletedAt:
          type: string
          format: date-time
    PaymentPage:
      type: object
      required:
        - payments
        - totalPageNumber
        - totalItemNumber
        - nextPageIndex
        - hasMore
      properties:
        totalPageNumber:
          type: integer
        totalItemNumber:
          type: integer
        hasMore:
          type: boolean
        nextPageIndex:
          description: if there is no next page, it will be equals to the last page
          type: integer
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentPageItemResponse'
    PaymentPageItemResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        budgetId:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/Currency'
        recipientId:
          type: integer
          format: int64
        isPayable:
          type: boolean
        payoutSettings:
          type: string
        requestorId:
          type: string
          format: uuid
        items:
          type: array
          items:
            type: string
        requestedAt:
          type: string
          format: date-time
        processedAt:
          type: string
          format: date-time
        pullRequestsCount:
          type: integer
        issuesCount:
          type: integer
        dustyIssuesCount:
          type: integer
        codeReviewsCount:
          type: integer


    ProjectPage:
      type: object
      required:
        - projects
        - totalPageNumber
        - totalItemNumber
        - nextPageIndex
        - hasMore
      properties:
        totalPageNumber:
          type: integer
        totalItemNumber:
          type: integer
        hasMore:
          type: boolean
        nextPageIndex:
          description: if there is no next page, it will be equals to the last page
          type: integer
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectPageItemResponse'
    ProjectPageItemResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        shortDescription:
          type: string
        longDescription:
          type: string
        moreInfoLinks:
          type: array
          items:
            type: string
        logoUrl:
          type: string
        hiring:
          type: boolean
        rank:
          type: integer
        visibility:
          $ref: '#/components/schemas/ProjectVisibility'
        projectLeads:
          type: array
          items:
            type: string
            format: uuid
        createdAt:
          type: string
          format: date-time
        activeContributors:
          type: integer
          format: int64
        newContributors:
          type: integer
          format: int64
        uniqueRewardedContributors:
          type: integer
          format: int64
        openedIssues:
          type: integer
          format: int64
        contributions:
          type: integer
          format: int64
        dollarsEquivalentAmountSent:
          type: number
        strkAmountSent:
          type: number
    Currency:
      type: string
      enum:
        - USD
        - ETH
        - APT
        - STRK
        - OP
        - LORDS
        - USDC

    ProjectVisibility:
      type: string
      enum:
        - PUBLIC
        - PRIVATE