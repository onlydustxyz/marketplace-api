application:
  onlydust-wallets:
    ethereum: '0xCC283c1CED6f9eAF288EFEe2E924Cd01e5578990'
    starknet: '0x038f2d2759AFF91584D696344A32B2352cAFFB7e57Cd6daCC9b1A0fF992f06c7'
    optimism: '0xaEF011B2374D723652796BF25a9FEE9e81C45a36'
    stellar: 'GCY2AHYGO4DBKMMNITVD7ZHYG5W2PEYFW7XOCJVUPI3GAOYNR5HVRN3O'
    near: ${NEAR_ACCOUNT_ID}

  web:
    cors:
      hosts: ${FRONTEND_CORS_HOSTS}
    auth0:
      jwks-url: ${AUTH0_JWKS_URL}
      user-info-url: ${AUTH0_JWKS_URL}userinfo
      expires-at-leeway: 10
    machine-to-machine:
      api-key: ${INTERNAL_API_KEY}
    back-office-invoice-token:
      token: ${BACKOFFICE_INVOICE_DOWNLOAD_TOKEN}
      base-url: ${BACKOFFICE_API_BASE_URL}
    debug:
      environment: ${ENV}
  github:
    installation:
      retry:
        retry-count: 20
        retry-interval: 500
  cron:
    notification-job-delay: 60000 # 1 minute
    update-projects-ranking: 7200000 # 2 hours
    indexer-sync-job-delay: 5000 # 5 seconds
    refresh-currency-quotes: 600000 # 10 minute
    refresh-active-user-profiles: 86400000 # 1 day
    tracking-job-delay: 60000 # 1 minute
    indexing-event-job-delay: 5000 # 5 seconds
    billing-profile-verification-job: 5000 # 15 seconds
    update-projects-tags: 7200000 # 2 hours
    refresh-reward-usd-equivalents-job-delay: 7200000 # 2 hours
    refresh-user-ranks: 300000 # 5 minutes
    historize-user-ranks-cron-expression: "0 0 0 * * *" # every day at midnight
    remind-users-to-complete-their-billing-profiles-cron-expression: "0 0 1 * * *" # every day at 1:00am
    process-boosted-rewards-cron-expression: ${NODE_GUARDIANS_PROCESS_BOOSTED_REWARDS_CRON_EXPRESSION}
    cleanup-obsolete-applications: 86400000 # 1 day
    boost-rewards-cron-expression: ${NODE_GUARDIANS_BOOST_REWARDS_CRON_EXPRESSION}
    send-summary-notifications-emails-cron-expression: "0 0 8 * * MON"
    refresh-project-recommendations-cron-expression: "0 0 0 * * *" # every day at 1:00am
    notify-good-first-issues-created-job-delay: 300000 # 5 minutes
    refresh-project-stats: 300000 # 5 minutes
    github-commands-job-delay: 5000 # 5 seconds
    index-searchable-documents-job-delay: 86400000 # Every 24H : launch an indexation by restarting jobs app
  sumsub:
    webhook:
      secret: ${SUMSUB_WEBHOOK_SECRET}
      od-api-header: ${SUMSUB_WEBHOOK_HEADER}
  node-guardians:
    project-id: ${NODE_GUARDIANS_BOOST_PROJECT_ID}
    project-lead-id: ${OD_BOT_PROJECT_LEAD_ID}
    github-repo-id: ${NODE_GUARDIANS_BOOST_GITHUB_REPO_ID}
    ecosystem-id: ${NODE_GUARDIANS_BOOST_ECOSYSTEM_ID}
  automated-rewards:
    project-lead-id: ${OD_BOT_PROJECT_LEAD_ID}
  cache:
    no-cache: ${API_CACHE_NO_CACHE}
    time-divisor: ${API_CACHE_TIME_DIVISOR}
    default-stale-while-revalidate-seconds: ${API_CACHE_DEFAULT_STALE_WHILE_REVALIDATE_SECONDS}
  retryable:
    github-command-consumers:
      max-attempts: 5

spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  liquibase:
    enabled: false
  datasource:
    url: ${JDBC_DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connectionTimeout: 30000
      idleTimeout: 30000
      maxLifetime: 60000
      maximumPoolSize: 50
      minimumIdle: 10
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        query:
          in_clause_parameter_padding: true
        event:
          merge:
            entity_copy_observer: allow
        format_sql: false
        order_inserts: true
        order_updates: true
        generate_statistics: false
        jdbc:
          time_zone: UTC
          batch_size: 10000
        temp:
          use_jdbc_metadata_defaults: false
    generate-ddl: false
    open-in-view: false
    show-sql: false
  task:
    scheduling:
      pool:
        size: 3
server:
  port: ${PORT}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    pathsToMatch: /bo/**, /api/**

infrastructure:
  aws:
    image-bucket: ${IMAGE_BUCKET_NAME}
    region: ${AWS_REGION}
    access-key: ${AWS_ACCESS_KEY_ID}
    secret-key: ${AWS_SECRET_ACCESS_KEY}
    invoice-bucket: ${INVOICE_BUCKET_NAME}
  github:
    personal-access-token: ${GITHUB_PAT}
    base-uri: ${GITHUB_BASE_URL}
  dusty-bot:
    personal-access-token: ${DUSTY_BOT_GITHUB_PAT}
    base-uri: ${DUSTY_BOT_GITHUB_BASE_URL}
  github-app:
    app-id: ${GITHUB_APP_ID}
    private-key: ${GITHUB_APP_PRIVATE_KEY}
  od:
    api:
      client:
        base-uri: ${RUST_API_BASE_URL}
        api-key: ${RUST_API_KEY}
  indexer:
    api:
      client:
        base-uri: ${INDEXER_API_BASE_URL}
        api-key: ${INDEXER_API_KEY}
  auth0:
    api:
      client:
        domain-base-uri: ${AUTH0_DOMAIN_BASE_URL}
        client-id: ${AUTH0_M2M_CLIENT_ID}
        client-secret: ${AUTH0_M2M_CLIENT_SECRET}
        pat-cache-ttl-in-seconds: 3600
  aptos:
    base-uri: ${APTOS_RPC_URL}
  coinmarketcap:
    base-uri: https://pro-api.coinmarketcap.com
    api-key: ${COINMARKETCAP_API_KEY}
  ethereum:
    base-uri: ${ETHEREUM_RPC_URL}
    blockchain: ethereum
    private-key: ${ETHEREUM_PRIVATE_KEY}
  optimism:
    base-uri: ${OPTIMISM_RPC_URL}
    blockchain: optimism
    private-key: ${ETHEREUM_PRIVATE_KEY}
  starknet:
    base-uri: ${STARKNET_RPC_URL}
    blockchain: starknet
    private-key: ${ETHEREUM_PRIVATE_KEY}
  near:
    base-uri: ${NEAR_RPC_URL}
  stellar:
    horizon:
      base-uri: ${STELLAR_HORIZON_URL}
      environment: ${BLOCKCHAIN_ENVIRONMENT}
    soroban:
      base-uri: ${STELLAR_SOROBAN_URL}
      account-id: ${STELLAR_ACCOUNT_ID}
      environment: ${BLOCKCHAIN_ENVIRONMENT}
  posthog:
    base-uri: https://eu.posthog.com
    api-key: ${POSTHOG_API_KEY}
    user-agent: ${POSTHOG_USER_AGENT}
  sumsub:
    base-uri: https://api.sumsub.com
    app-token: ${SUMSUB_API_APP_TOKEN}
    secret-key: ${SUMSUB_API_SECRET_KEY}
    kyc-questionnaire-name: ${SUMSUB_KYC_QUESTIONNAIRE}
    kyb-questionnaire-name: ${SUMSUB_KYB_QUESTIONNAIRE}
    kyc-level: ${SUMSUB_KYC_LEVEL}
  slack:
    environment: ${ENV}
    token: ${SLACK_TOKEN}
    kyc-kyb-channel: ${SLACK_KYC_KYB_CHANNEL}
    dev-rel-channel: ${SLACK_DEV_REL_CHANNEL}
    tag-all-channel: ${SLACK_PING_ALL_CHANNEL_FOR_CLOSED_BILLING_PROFILE}
    finance-channel: ${SLACK_FINANCE_CHANNEL}
  customer-io:
    base-uri: https://api-eu.customer.io/v1
    api-key: ${CUSTOMER_IO_API_KEY}
    rewards-paid-email-id: ${CUSTOMER_IO_REWARDS_PAID_EMAIL_ID}
    reward-canceled-email-id: ${CUSTOMER_IO_REWARD_CANCELED_EMAIL_ID}
    new-reward-received-email-id: ${CUSTOMER_IO_REWARD_RECEIVED_EMAIL_ID}
    invoice-rejected-email-id: ${CUSTOMER_IO_INVOICE_REJECTED_EMAIL_ID}
    verification-closed-email-id: ${CUSTOMER_IO_VERIFICATION_CLOSED_EMAIL_ID}
    verification-rejected-email-id: ${CUSTOMER_IO_VERIFICATION_REJECTED_EMAIL_ID}
    new-committee-application-email-id: ${CUSTOMER_IO_COMMITTEE_APPLICATION_EMAIL_ID}
    project-applications-to-review-by-user-email-id: 16
    project-application-accepted-email-id: ${CUSTOMER_IO_APPLICATION_ACCEPTED_EMAIL_ID}
    environment: ${ENV}
    kyc-individual-verification-email-id: ${CUSTOMER_IO_KYC_INDIVIDUAL_VERIFICATION_EMAIL_ID}
    complete-your-billing-profile-email-id: ${CUSTOMER_IO_COMPLETE_YOUR_BILLING_PROFILE_EMAIL_ID}
    weekly-notifications-email-id: ${CUSTOMER_IO_WEEKLY_NOTIFICATIONS_EMAIL_ID}
    project-application-refused-email-id: ${CUSTOMER_IO_APPLICATION_REFUSED_EMAIL_ID}
    issue-created-email-id: ${CUSTOMER_IO_ISSUE_CREATED_EMAIL_ID}
    funds-allocated-to-program-email-id: ${CUSTOMER_IO_FUNDS_ALLOCATED_TO_PROGRAM_EMAIL_ID}
    funds-unallocated-from-program-email-id: ${CUSTOMER_IO_FUNDS_UNALLOCATED_FROM_PROGRAM_EMAIL_ID}
    funds-ungranted-from-project-email-id: ${CUSTOMER_IO_FUNDS_UNGRANTED_FROM_PROJECT_EMAIL_ID}
    deposit-approved-email-id: ${CUSTOMER_IO_DEPOSIT_APPROVED_EMAIL_ID}
    deposit-rejected-email-id: ${CUSTOMER_IO_DEPOSIT_REJECTED_EMAIL_ID}
    tracking-api-key: ${CUSTOMER_IO_TRACKING_API_KEY}
    tracking-site-id: ${CUSTOMER_IO_TRACKING_SITE_ID}
    tracking-base-uri: https://track-eu.customer.io/api/v1
    marketing-topic-id: ${CUSTOMER_IO_MARKETING_TOPIC_ID}
  node-guardians:
    base-uri: ${NODE_GUARDIANS_BASE_URI}
    api-key: ${NODE_GUARDIANS_API_KEY}
  block-explorer:
    environment: ${BLOCKCHAIN_ENVIRONMENT}
  elasticsearch:
    api-key: ${ELASTICSEARCH_API_KEY}
    url: ${ELASTICSEARCH_URL}

global:
  app-base-url: ${APP_BASE_URL}
  active-user-profiles-refresh-period-in-days: 30

langchain4j:
  open-ai:
    chat-model:
      api-key: ${OPENAI_API_KEY}
      model-name: "gpt-4o-2024-08-06"
      temperature: 0

management:
  endpoints:
    web:
      exposure:
        include: health,info,loggers
  info:
    git:
      enabled: true
      mode: simple
    java:
      enabled: false
    env:
      enabled: false
    build:
      enabled: false
  endpoint:
    loggers:
      enabled: true
    info:
      enabled: true
