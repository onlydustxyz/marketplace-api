name: Backend CI

on:
  pull_request: ~
  push:
    branches:
      - "main"
      - "staging"
      - "production"
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Setup Maven
        uses: s4u/maven-settings-action@v3.0.0
      - run: ./mvnw clean install -T 4 -DskipTests -DskipITs -DskipUTs

  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - run: ./mvnw test -T 6
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/target/site/jacoco-aggregate/jacoco.xml
          flags: unit_tests

  integration_tests:
    strategy:
      fail-fast: false
      matrix:
        suite: [ Accounting, BO, Concurrency, Me, Project, Reward, User, BI, Others, Postgres ]
    name: ITs [${{ matrix.suite }}]
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - run: ./mvnw verify -Dfailsafe-include='**/${{ matrix.suite }}Suite.java' -DskipUTs=true -T 6
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/target/site/jacoco-aggregate/jacoco.xml
          flags: integration_tests

  build_and_push_docker_image:
    name: Build nad push docker image to AWS ECR
    runs-on: ubuntu-latest
    needs:
      - build
#      - integration_tests
#      - unit_tests
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEVELOP_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEVELOP_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "marketplace-repository"
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG